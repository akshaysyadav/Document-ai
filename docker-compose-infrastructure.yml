services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kmrl_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kmrl_db}
      POSTGRES_USER: ${POSTGRES_USER:-kmrl_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kmrl_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kmrl_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kmrl_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for RQ Queue
  redis:
    image: redis:7-alpine
    container_name: kmrl_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kmrl_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: kmrl_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - kmrl_network
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: kmrl_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - kmrl_network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  minio_data:
    driver: local

networks:
  kmrl_network:
    driver: bridge
